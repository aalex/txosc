#!/usr/bin/env python
# Copyright (c) 2009 Alexandre Quessy, Arjan Scherpenisse
# See LICENSE for details.
"""
OSC receiver made with txosc
"""
import sys
import optparse
from twisted.internet import reactor
import txosc # for __version__
from txosc import osc
from txosc import dispatch
from txosc import async

VERBOSE = False

def verb(txt):
    """
    Prints a message if in verbose mode.
    """
    global VERBOSE
    if VERBOSE:
        print(txt)

def fallback(message, address):
    """
    Fallback for any unhandled message
    """
    print("%s from %s" % (message, address))

class OscDumper(object): 
    """
    Prints OSC messages it receives.
    """
    def __init__(self, protocol, port):
        self.receiver = dispatch.Receiver()
        if protocol == "UDP":
            self._server_port = reactor.listenUDP(port, async.DatagramServerProtocol(self.receiver))
        else:
            raise NotImplementedError("TCP is to do.")
        print("Listening on osc.%s://localhost:%s" % (protocol.lower(), port))
        
        # fallback:
        self.receiver.setFallback(fallback)

if __name__ == "__main__":
    parser = optparse.OptionParser(usage="%prog", version=txosc.__version__.strip(), description=__doc__)
    parser.add_option("-p", "--port", type="int", default=31337, help="Port to listen on")
    #TODO: parser.add_option("-H", "--host", type="string", default="226.0.0.1", help="Multicast group to listen on")
    parser.add_option("-v", "--verbose", action="store_true", help="Makes the output verbose")
    #parser.add_option("-T", "--tcp", action="store_true", help="Uses TCP instead of UDP")
    (options, args) = parser.parse_args()
    app = None
    protocol = "UDP"
    def _later():
        app = OscDumper(protocol, options.port)
    reactor.callLater(0.01, _later)
    reactor.run()

